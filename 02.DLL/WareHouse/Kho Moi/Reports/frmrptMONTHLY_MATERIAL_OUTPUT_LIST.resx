<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="CHONPT.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="CHON.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnChonhetQG.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADr8AAA6/ATgFUyQAAAK8SURBVDhPbZLbT9NwFMeH8oAQ9qBRE5948VUMVUJM0Pgf
        GE0fjCaaCAhoJMQQVISRRXmYsgGL3GTMdXblYgaBcVEQRBiMsbnh2DXsCtvaMTDMQGhic2yHEHVt8s1p
        fjnfz+/bcyoQ8DwAgrSfk6dOJ4aFzYkhoWJ7OPssiARH+Hr/OevrQ496mo8Lo8rsRxSWiVPqrHoKy3oQ
        wzL7I0phXbDrxJlp0ZV0XtCYKDfnk+SyVN9S2OttzNgOSNPAJ81w+mXHzOw745em08amPN3k66tvxsXn
        c1MgOvGF6+YB8V7AooPgSCUEB4uTCgwUJeUfLAWvgQDLmOzX6MuCylRAXT7qnCXozc04xGMUbBkNEHc7
        IRYjgSKjQJIRIKNRcC2NMUMvCqtSANqafNTxlaA3SBLiWi38kMkgYrfD2toahEIhCAaDsL6+DvbFUUZb
        zwPof4Kgti8EHaMooEwmoKxWCPn94Gfl8/nA6/UmQbZ5HdP7/FJqgp4qBF2e1uwD3G7Y0mggZrFAJBKB
        cDh8mMQ6N8Tgz3gAeAWCWj5raJJtjuM4bGAY+FwucLMwF1udTmcyhXlmkFFX8QCUDxHUPIHTJDuDMBs7
        HAgkIwfYevAJHMA4NcAoK3kAXWUIahx/T/8d+cC8uroKHo8nqYWJD0xnRUHqDFrvIahhFKO5SXMQzszF
        t7ObWFlZAZvNBg6HA+bG+5jWch6A/C6C6nUqmlsbt7L/b+dmwMFmRnqYlhIeQOPNczc+vpPsOZaXwG41
        gu3bInw3LYDFqAezYRZM8zOwODcFOqyJeXUn7/Hhj6RQKE6q1eqL7ZKaMnn17UCHqCTxtr50p1N0f7dT
        VLLbUbev9trinbbaokRL9a1om7jiKefhvAKCIHJwHL+GYViZSqmoYdWAdSskbJWrlN2t+1LI/5w1cD1q
        taqc83De30+gIlLkU8dHAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnChonhetVT.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADr8AAA6/ATgFUyQAAAK8SURBVDhPbZLbT9NwFMeH8oAQ9qBRE5948VUMVUJM0Pgf
        GE0fjCaaCAhoJMQQVISRRXmYsgGL3GTMdXblYgaBcVEQRBiMsbnh2DXsCtvaMTDMQGhic2yHEHVt8s1p
        fjnfz+/bcyoQ8DwAgrSfk6dOJ4aFzYkhoWJ7OPssiARH+Hr/OevrQ496mo8Lo8rsRxSWiVPqrHoKy3oQ
        wzL7I0phXbDrxJlp0ZV0XtCYKDfnk+SyVN9S2OttzNgOSNPAJ81w+mXHzOw745em08amPN3k66tvxsXn
        c1MgOvGF6+YB8V7AooPgSCUEB4uTCgwUJeUfLAWvgQDLmOzX6MuCylRAXT7qnCXozc04xGMUbBkNEHc7
        IRYjgSKjQJIRIKNRcC2NMUMvCqtSANqafNTxlaA3SBLiWi38kMkgYrfD2toahEIhCAaDsL6+DvbFUUZb
        zwPof4Kgti8EHaMooEwmoKxWCPn94Gfl8/nA6/UmQbZ5HdP7/FJqgp4qBF2e1uwD3G7Y0mggZrFAJBKB
        cDh8mMQ6N8Tgz3gAeAWCWj5raJJtjuM4bGAY+FwucLMwF1udTmcyhXlmkFFX8QCUDxHUPIHTJDuDMBs7
        HAgkIwfYevAJHMA4NcAoK3kAXWUIahx/T/8d+cC8uroKHo8nqYWJD0xnRUHqDFrvIahhFKO5SXMQzszF
        t7ObWFlZAZvNBg6HA+bG+5jWch6A/C6C6nUqmlsbt7L/b+dmwMFmRnqYlhIeQOPNczc+vpPsOZaXwG41
        gu3bInw3LYDFqAezYRZM8zOwODcFOqyJeXUn7/Hhj6RQKE6q1eqL7ZKaMnn17UCHqCTxtr50p1N0f7dT
        VLLbUbev9trinbbaokRL9a1om7jiKefhvAKCIHJwHL+GYViZSqmoYdWAdSskbJWrlN2t+1LI/5w1cD1q
        taqc83De30+gIlLkU8dHAAAAAElFTkSuQmCC
</value>
  </data>
</root>