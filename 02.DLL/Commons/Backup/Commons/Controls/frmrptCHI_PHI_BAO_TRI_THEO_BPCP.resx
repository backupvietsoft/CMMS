<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnThoat.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA69AAAOvQFH+5CtAAADo0lE
        QVQ4T11SC0wTVhR9awkRJDhQJ5K2MKUtaS1qjchPYCoYjcuYKJtuS8icDrOxjS2ZbBaeylBAKBRKC4UW
        ClTSArbQWT4Wq9R9UH4DCrSJqEjGssW4xcVkWfGsRabZTnLz3s075757ci/5P4a6uvztWkPCsL7r9Lip
        p3Giq69lrONKyZDOmDag168F8NIy9b/wPlxXarjXKupUg83tvzos/YtO6wCcVjume21PRw3mP29Uaax2
        hXaPzWbzWZa9QH+5gm8+XXTNVqp0T3T2YtIT4x2WpZi43A3Ht1fxQ50O3ZLie9Yy1ZugYCxLCbHIZIHt
        ObRF/8EXizcrNViYcmF+fBq3GvQYVOkwae7Dw/mf4bGCzuw8GLPzJrulcuGynBBj7rn9DYdP/K47dAJX
        aRmctu/wx6NHGGkzY0CqwgPHDH65dx8DlWq0ZeagOe3YounT/GIb9ViBx09z5idyZeLBp+rkw+jwELq/
        LsLs2ARmxx0YNvdibvYubtQ2oTMrF9rUd1C/Mx26Qx8OWysq1hH7BUWQct9Ru0y0G0pRCtQxaWh9/X1Y
        6EU4HVNwOZ24qTeiNSML2uQM1ESlPuMlpi/0SC5sJjZauqZk82tDxaFiVLFjIOfEQslNgv7dbDhGxuBy
        udBXXouaTSmQh8UtcZZ43MTfuk7mbic2uTygSJhwJd83DNJAIWQvR0GxYSduGzoxM/oTRvuv4+7kNBr3
        HIEsKAqyVSKU+fFRzoq+b8qS8AmllCGL3vtVni/LXcIMh8w/Er2nCrEw9wCmnHxPqwcxNzWDkXYzqkO2
        QeYTgfIVPKh3HOixUBq4NIWWNzJF36yJvHOewYJqYzycP97GLYMJ1a+IofDlo+fLAszdmUVb+nEoVwpQ
        z09+Ynzr5LHnW2mj1KdGnPpZoX/YY+lqAS5/dAqaLamoY3JRz+BCE7Idls/PQLcrA42CXe62fe+1fp9T
        Frwk/he6hKNBVby40ourIh6X+oWh2i8CdQECNKzegiZWDJr4SWjeuvfv1qT0/kuJb2+lhLxYZ0/CoIQd
        WrCCe6SCva1DwYubr+XFPqmPjHc3bEp2a8UpfzVF73+oEu0eLAkSFBYw2amUsIJByDML3kshCVl7lslO
        oQzOx+dXRhRI14sV8o2xzdW8+EuV4TvUxcHCsrM+HMkZBuc49eHEURIR+LyAFwZCmJQIAgrJq+soCQuX
        kHA+JRzBOcIWek9KQnmUbOB4P6Jkvb+3a0II+QeTiuxIajjhNAAAAABJRU5ErkJggg==
</value>
  </data>
</root>